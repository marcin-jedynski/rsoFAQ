global_defs {
        notification_email {
                kalkos@centuria.pl
        }
        notification_email_from keepalived@asl24.pl
        smtp_server localhost
        smtp_connect_timeout 30
        lvs_id LVS_MAIN1 
}

vrrp_sync_group VG_1 {
        group {
        VI_1
        VI_2
        }
}
vrrp_sync_group VG_2 {
        group {
        VI_3
        VI_4
        }
}

vrrp_instance VI_1 {
        state MASTER
        interface eth1
        virtual_router_id 51 # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast 
        priority 150 # Can be the same on both instances, unless using MASTER/BACKUP then the bigger number is for the master
        advert_int 1 # interwal miedzy advertisment
        authentication {
                auth_type PASS
                auth_pass qwerty
        }
        virtual_ipaddress {
                192.168.50.1/24 # identify a VRRP VIP definition block 
        }
        unicast_src_ip 192.168.47.132 # Unicast specific option, this is the IP of the interface keepalived listens on
}

vrrp_instance VI_2 {
        state MASTER
        interface eth2
        virtual_router_id 52 # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast
        priority 150 # Can be the same on both instances, unless using MASTER/BACKUP then the bigger number is for the master
        advert_int 1 # interwal miedzy advertisment
        authentication {
                auth_type PASS
                auth_pass ytrewq
        }
        virtual_ipaddress {
                192.168.100.1/24 # identify a VRRP VIP definition block 
        }
        unicast_src_ip 192.168.47.132 # Unicast specific option, this is the IP of the interface keepalived listens on
}

vrrp_instance VI_3 {
        state BACKUP
        interface eth1
        virtual_router_id 53 # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast
        priority 100 # Can be the same on both instances, unless using MASTER/BACKUP then the bigger number is for the master
        advert_int 1 # interwal miedzy advertisment
        authentication {
                auth_type PASS
                auth_pass 12345
        }
        virtual_ipaddress {
                192.168.50.2/24 # identify a VRRP VIP definition block 
        }
        unicast_src_ip 192.168.47.132 # Unicast specific option, this is the IP of the interface keepalived listens on
}
vrrp_instance VI_4 {
        state BACKUP
        interface eth3
        virtual_router_id 54 # Needs to be the same on both instances, and needs to be unique if using multicast, does not matter with unicast
        priority 100 # Can be the same on both instances, unless using MASTER/BACKUP then the bigger number is for the master
        advert_int 1 # interwal miedzy advertisment
        authentication {
                auth_type PASS
                auth_pass 54321
        }
        virtual_ipaddress {
                192.168.200.1/24 # identify a VRRP VIP definition block 
        }
        unicast_src_ip 192.168.47.132 # Unicast specific option, this is the IP of the interface keepalived listens on
}
virtual_server 192.168.50.1 80 {
        delay_loop 30 # specify in seconds the interval between checks
        #lb_algo wrr
        lb_algo rr # rr|wrr|lc|wlc|sh|dh|lblc
        lb_kind NAT # NAT | DR | TUN
        #persistence_timeout 50 # specify a timeout value for persistent connections 
        protocol TCP # TCP | UDP
        sorry_server 150.254.78.2 80 # jak padną wszystkie RS, to ruch jest przekazywany na ten serwer
        real_server 192.168.100.10 80 {
                weight 1
                TCP_CHECK {
                        connect_ip 192.168.100.10  # IP address to connect (default real_server address)
                        connect_port 80
                        connect_timeout 1 # connect remote server using timeout
                }
        }
        real_server 192.168.100.20 80 {
                weight 1
                TCP_CHECK {
                        connect_ip 192.168.100.20 # IP address to connect (default real_server address)
                        connect_port 80
                        connect_timeout 1 # connect remote server using timeout
                }
        }
}

virtual_server 192.168.50.2 80 {
        delay_loop 30 # specify in seconds the interval between checks
        #lb_algo wrr
        lb_algo rr # rr|wrr|lc|wlc|sh|dh|lblc
        lb_kind NAT # NAT | DR | TUN
        #persistence_timeout 50 # specify a timeout value for persistent connections 
        protocol TCP
        sorry_server 150.254.78.2 80 # jak padną wszystkie RS, to ruch jest przekazywany na ten serwer
        real_server 192.168.200.10 80 {
                weight 1
                TCP_CHECK {
                        connect_ip 192.168.200.10  # IP address to connect (default real_server address)
                        connect_port 80
                        connect_timeout 1 # connect remote server using timeout
                }
        }
        real_server 192.168.200.20 80 {
                weight 1
                TCP_CHECK {
                        connect_ip 192.168.200.20 # IP address to connect (default real_server address)
                        connect_port 80
                        connect_timeout 1 # connect remote server using timeout
                }
        }
}